@model Maps.Entities.DistanceFilterViewModel

@using (Ajax.BeginForm("Distance", "Filter", null,
                        new AjaxOptions { HttpMethod = "post", UpdateTargetId = string.Concat("filter", Model.Id), InsertionMode = InsertionMode.Replace }))
{
    if (!Html.ViewData.ModelState.IsValid)
    {
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    }

    @Html.AntiForgeryToken()
    <input type="hidden" name="Id" id="Id" value="@Model.Id" />

    <div class="form-row">
        <div class="col-10">
            <span class="font-weight-bold">Radius filter</span>
        </div>
        <div class="col-auto">
            @Html.CheckBoxFor(m => m.IsVisible)
        </div>
    </div>
    <div class="form-row">
        <div class="col-4">
            @Html.LabelFor(m => m.Longitude)
        </div>
        <div class="col-auto">
            @Html.EditorFor(m => m.Longitude, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
        </div>
    </div>
    <div class="form-row">
        <div class="col-4">
            @Html.LabelFor(m => m.Latitude)
        </div>
        <div class="col-auto">
            @Html.EditorFor(m => m.Latitude, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
        </div>
    </div>
    <div class="form-row">
        <div class="col-4">
            @Html.LabelFor(m => m.Radius)
        </div>
        <div class="col-auto">
            @Html.EditorFor(m => m.Radius, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
        </div>
    </div>

    <input type="submit" value="Update filter" class="btn btn-link float-right" />
}