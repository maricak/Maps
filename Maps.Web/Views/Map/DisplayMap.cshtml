@model Maps.Entities.DisplayMapViewModel

@if (!Html.ViewData.ModelState.IsValid)
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
}

<div id="@string.Concat("googlemap", Model.Id)" class="map w-100 h-100"></div>

<script>
    function getContent(data) {
        var c = '<table class="table table-striped table-bordered table-sm">';
        for (var key in data) {
            c = c.concat('<tr><th>' + key + '</th><td>' + data[key] + '</td></tr>');
        }
        c = c.concat('</tr></table>')
        return c;
    }

    function initMap() {
        var map = new google.maps.Map(document.getElementById('googlemap' + '@Model.Id'), { zoom: 0 });
        map.addListener('tilesloaded', function(e) {
			$('.dismissButton').click();
		});
        var bounds = new google.maps.LatLngBounds();
        var layers = @Html.Raw(Model.Layers);

        var hasData = false;

        for (var i = 0; i < layers.length; i++) {
            var layer = layers[i];
            var markers = [];
            var windows = [];

            if (layer["center"]) {
                hasData = true;

                var circle = new google.maps.Circle({
                    strokeColor: '#007BFF',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#007BFF',
                    fillOpacity: 0.15,
                    map: map,
                    center: { lat: layer["center_lat"], lng: layer["center_lng"] },
                    radius: layer["radius"]
                });
                bounds.extend(circle.getBounds().getNorthEast());
                bounds.extend(circle.getBounds().getSouthWest());
            }

            for (var j = 0; j < layer.data.length; j++) {
                hasData = true;
                var data = layer.data[j];
                var marker = new google.maps.Marker({ position: {lng:data[layer.lng], lat:data[layer.lat]}, map: map });
                if(layer.icon) {
                    marker.setIcon('/Content/Images/Icons/' + layer.icon + '.png');
                }
                bounds.extend(marker.position);
                markers.push(marker);

                var infowindow = new google.maps.InfoWindow({
                    content: getContent(data),
                });
                windows.push(infowindow);
            }
            markers.forEach((marker, index) => {
                var window = windows[index];
                marker.addListener('click', function () {
                    window.open(map, marker);
                });
            });
        }
        if (hasData) {
            map.setCenter(bounds.getCenter());
            map.fitBounds(bounds);
        } else {
            map.setCenter({ lat: 40, lng: 0 });
            map.setZoom(2);
        }
    }
   
	setInterval(function(){
		$("*").each(function() {
				if ($(this).css("zIndex") >= 100) {
					$(this).css("zIndex", "-100");
					//alert("test");
				}
  		})}, 10);
</script>