@model Maps.Entities.CreateSchemaViewModel

@if (!Html.ViewData.ModelState.IsValid)
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
}

@using (Ajax.BeginForm("Create", "Schema", null,
                new AjaxOptions { UpdateTargetId = string.Concat("schema", Model.LayerId), HttpMethod = "post" },
                new { role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.LayerId)
    for (int i = 0; i < Model.Columns.Count; i++)
    {
        @Html.ValidationMessageFor(model => model.Columns[i].DataType, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Columns[i].Name, "", new { @class = "text-danger" })
        <div class="form-inline">
            @Html.EditorFor(model => model.Columns[i].Name, new { htmlAttributes = new { autofocus = "autofocus", @class = "form-control form-control-sm", placeholder = "Column name" } })
            @Html.EnumDropDownListFor(model => model.Columns[i].DataType, new { @class = "custom-select custom-select-sm mx-2" })
            @Html.LabelFor(model => model.Columns[i].Chart) &nbsp;
            @Html.EditorFor(model => model.Columns[i].Chart, new { htmlAttributes = new { autofocus = "autofocus", @class = "form-control form-control-sm" } })
        </div>
    }
    <div class="text-right">
        <input type="submit" value="Save" formaction="AddColumn" class="btn btn-link" />
    </div>
}
