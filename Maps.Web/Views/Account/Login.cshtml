@using Maps.Entities
@model LoginViewModel
@{ ViewBag.Title = "Log in"; }

<div class="card my-3">
    <div class="card-header">
        <h3 class="card-title m-0">@ViewBag.Title</h3>
    </div>
    <section class="card-body" id="loginForm">
        @if (!Html.ViewData.ModelState.IsValid)
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        }
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h5 class="card-subtitle">Use a local account to log in</h5>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = " col-form-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-form-label" })
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-row">
                <div class="col-10">
                    <div class="form-check">
                        @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input" })
                        @Html.LabelFor(m => m.RememberMe, new { @class = "form-check-label" })
                    </div>
                    @Html.ActionLink("Forgot your password?", "ForgotPassword", "", new { @class = "card-link" })
                </div>
                <div class="col-2">
                    <input type="submit" value="Log in" class="btn btn-primary float-right" />
                </div>
            </div>
        }
    </section>
    <section id="socialLoginForm">
        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
    </section>
</div>